workload: Transaction
operation: read-write
number: 2
title: Transfer under in/out ratio strategy
compositions:
  - name: Transaction / Simple Read / 1
    ref: transaction-simple-read-01
  - name: Transaction / Write / 3
    ref: transaction-write-03
  - name: Transaction / Complex Read / 7
    ref: transaction-complex-read-07
  - name: Transaction / Write / 10
    ref: transaction-write-10
description: |
  The workflow of this read write query contains at least one transaction. It works as:

  * In the very beginning, read the blocked status of related accounts with given ids of two *src* and *dst* accounts.
  The transaction aborts if one of them is blocked. Move to the next step if none is blocked.
  * Add a transfer edge from *src* to *dst* inside a transaction. Given a specified time window between *startTime*
  and *endTime*, find all the *transfer-in* and *transfer-out* whose amount exceeds *amountThreshold*. Transaction
  aborts if the ratio of transfers-in/transfers-out amount exceeds a given *ratioThreshold*, both for the *src* and
  *dst* account. Otherwise the transaction commits.
  * If the last transaction aborts, mark the *src* and *dst* accounts as blocked in another transaction.
parameters:
  - name: srcId
    type: ID
    description: id of the src Account
  - name: dstId
    type: ID
    description: id of the dst Account
  - name: time
    type: DateTime
    description: the timestamp of the transfer
  - name: amount
    type: 64-bit Integer
    description: the amount of the transfer
  - name: amountThreshold
    type: 64-bit Integer
    description: transfer amount threshold
  - name: startTime
    type: DateTime
    description: begin of the time window
  - name: endTime
    type: DateTime
    description: end of the time window
  - name: ratioThreshold
    type: 32-bit float
    description: ratio threshold of transfers-in over transfers-out
choke_points: []
relevance: |
  It is a typical fraud detection and AWL case in risk control.
