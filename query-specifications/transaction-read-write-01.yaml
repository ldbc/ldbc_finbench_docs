workload: Transaction
operation: read-write
number: 1
title: Transfer under transfer cycle detection strategy
compositions:
  - name: Transaction / Simple Read / 1
    ref: transaction-simple-read-01
  - name: Transaction / Write / 3
    ref: transaction-write-03
  - name: Transaction / Complex Read / 4
    ref: transaction-complex-read-04
  - name: Transaction / Write / 10
    ref: transaction-write-10
description: |
  The workflow of this read write query contains at least one transaction. It works as:

  * In the very beginning, read the blocked status of related accounts. The transaction aborts if one of them is
  blocked. Move to the next step if none is blocked.
  * Add a transfer edge inside the transaction.
  * Detect if a new transfer cycle formed (which means there are no edges existing between the related accounts before).
  Transaction aborts if formed, and then mark the related accounts as blocked in another transaction. Otherwise the
  transaction commits.
parameters:
  - name: srcId
    type: ID
    description: id of the src Account
  - name: dstId
    type: ID
    description: id of the dst Account
  - name: time
    type: DateTime
    description: the timestamp of the transfer
  - name: amt
    type: 64-bit Integer
    description: the amount of the transfer
  - name: startTime
    type: DateTime
    description: begin of the time window
  - name: endTime
    type: DateTime
    description: end of the time window
choke_points: []
relevance: |
  It is a typical AWL case in risk control.
