workload: Transaction
operation: read-write
number: 1
title: Transfer under transfer cycle detection strategy
compositions:
  - name: Transaction / Simple Read / 1
    ref: transaction-simple-read-01
  - name: Transaction / Write / 12
    ref: transaction-write-12
  - name: Transaction / Complex Read / 4
    ref: transaction-complex-read-04
  - name: Transaction / Write / 18
    ref: transaction-write-18
description: |
  The workflow of this read write query contains at least one transaction. It works as:

  * In the very beginning, read the blocked status of related accounts with given ids of two *src* and *dst* accounts.
  The transaction aborts if one of them is blocked. Move to the next step if none is blocked.
  * Add a transfer edge from *src* to *dst* inside a transaction. Given a specified time window between *startTime* and
  *endTime*, find the other accounts which received money from *dst* and transferred money to *src* in a specific time.
  Transaction aborts if a new transfer cycle is formed, otherwise the transaction commits.
  * If the last transaction aborts, mark the *src* and *dst* accounts as blocked in another transaction. 
parameters:
  - name: srcId
    type: ID
    description: id of the src Account
  - name: dstId
    type: ID
    description: id of the dst Account
  - name: time
    type: DateTime
    description: the timestamp of the transfer
  - name: amount
    type: 64-bit Float
    description: the amount of the transfer
  - name: startTime
    type: DateTime
    description: begin of the time window
  - name: endTime
    type: DateTime
    description: end of the time window
choke_points: []
relevance: |
  It is a typical AWL case in risk control.
