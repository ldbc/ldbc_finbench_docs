workload: Transaction
operation: complex-read
number: 4
title: Three accounts in a transfer cycle
description: |
  Given two accounts *src* and *dst*, and a specified time window between
  *startTime* and *endTime*,

  (1) check whether *src* transferred money to *dst* in the given time window
  (*edge1*)

  (2) find all other accounts (other1, ..., otherN) which received money from
  dst (*edge2*) and transferred money to src (*edge3*) in a specific time.
  
  For each of these other accounts, return the id of the account, the sum and
  max of the transfer amount (*edge2* and *edge3*).
parameters:
  - name: id1
    type: ID
    description: id of the src Account
  - name: id2
    type: ID
    description: id of the dst Account
  - name: startTime
    type: DateTime
    description: begin of the time window
  - name: endTime
    type: DateTime
    description: end of the time window
  - name: truncationLimit
    type: 32-bit Integer
    description: maximum edges traversed at each step
  - name: truncationOrder
    type: Enum
    description: the sort order before truncation at each step
result:
  - name: otherId
    type: ID
    description: the id of the other account
    category: raw
  - name: numEdge2
    type: 64-bit Integer
    description: transfers' count from otherAccount to srcAccount
    category: aggregated
  - name: sumEdge2Amount
    type: 64-bit Float
    description: sum of transfers from otherAccount to srcAccount
    category: aggregated
  - name: maxEdge2Amount
    type: 64-bit Float
    description: max of transfers from otherAccount to srcAccount
    category: aggregated
  - name: numEdge3
    type: 64-bit Integer
    description: transfers' count from dstAccount to otherAccount
    category: aggregated
  - name: sumEdge3Amount
    type: 64-bit Float
    description: sum of transfers from dstAccount to otherAccount
    category: aggregated
  - name: maxEdge3Amount
    type: 64-bit Float
    description: max of transfers from dstAccount to otherAccount
    category: aggregated
sort:
  - name: sumEdge2Amount
    direction: desc
  - name: sumEdge3Amount
    direction: desc
  - name: otherId
    direction: asc
limit: 0
choke_points: [3.2, 3.4, 6.2, 8.7]
relevance: |
  This query is a typical fund transfer cycle analysis case in AWL.
