workload: Transaction
operation: complex-read
number: 2
title: Fund gathered from the accounts applying loans
description: |
  Given a *Person*, find an *Account* *owned* by the *Person* which has fund
  transferred from other *Accounts* by at most 3 steps(*edge2*) which
  connected to *loan* via *deposit* relationship. Note that the timestamps
  in transfer trace(*edge2*) and *deposit* are in a specific time range between
  *start_time* and *end_time*. The timestamps of in transfer trace(*edge2*) are
  in ascending order. Return the sum of *loan* amount and the count of distinct
  *loans*.
parameters:
  - name: id
    type: ID
    description: id of the start Person
  - name: start_time
    type: DateTime
    description: begin of the time window
  - name: end_time
    type: DateTime
    description: end of the time window
result:
  - name: SUM(loans.loanAmount)
    type: 64-bit Integer
    description: sum of all loans
  - name: COUNT(DISTINCT loans)
    type: 64-bit Integer
    description: number of different loans
choke_points: []
relevance: |
  This query is typical gang analysis case in risk control.
